version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: renting_apart_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-renting_apart}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - renting_apart_network
    restart: unless-stopped

  bot:
    build: .
    container_name: renting_apart_bot
    environment:
      - TOKEN=${TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-renting_apart}
      - DB_HOST=postgres
      - DB_PORT=5432
      - WEB_TOKEN=${WEB_TOKEN}
      - CLICK_TOKEN=${CLICK_TOKEN}
    volumes:
      - ./webscrape/images:/app/webscrape/images
    depends_on:
      - postgres
    networks:
      - renting_apart_network
    restart: unless-stopped
    command: python main.py

  web:
    build: .
    container_name: renting_apart_web
    environment:
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-renting_apart}
      - DB_HOST=postgres
      - DB_PORT=5432
      - WEB_TOKEN=${WEB_TOKEN}
      - CLICK_TOKEN=${CLICK_TOKEN}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - renting_apart_network
    restart: unless-stopped
    command: python web/app.py

volumes:
  postgres_data:

networks:
  renting_apart_network:
    driver: bridge